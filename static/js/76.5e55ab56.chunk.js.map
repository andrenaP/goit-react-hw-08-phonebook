{"version":3,"file":"static/js/76.5e55ab56.chunk.js","mappings":"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","sources":["components/ContactAnyInput/ContactAnyInput.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","redux/contact-selector.js","components/Section/Section.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport './ContactAnyInput.css';\n\nconst ContactAnyInput = ({\n  type,\n  name,\n  pattern,\n  title,\n  handleChange,\n  LableText,\n}) => {\n  return (\n    <label htmlFor={name} className=\"ContactAnyInputLabel\">\n      {LableText}\n      <input\n        type={type}\n        name={name}\n        pattern={pattern}\n        title={title}\n        required\n        onChange={handleChange}\n      ></input>\n    </label>\n  );\n};\n\nexport default ContactAnyInput;\n\nContactAnyInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  LableText: PropTypes.string,\n};\n","import { useState } from 'react';\nimport './ContactForm.css';\nimport ContactAnyInput from '../ContactAnyInput';\n\nimport { useAddContactMutation, useFetchContactsQuery } from 'redux/contact';\n\nexport default function ContactForm() {\n  const { data } = useFetchContactsQuery();\n  const contacts = data;\n  const [createContact] = useAddContactMutation();\n\n  const [name, setname] = useState('');\n  const [number, setnumber] = useState('');\n\n  const handleChange = (event, SetFunction) => {\n    SetFunction(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ name: name, phone: number });\n    reset();\n    event.target.reset();\n  };\n\n  const onSubmit = contactData => {\n    const { name } = contactData;\n\n    if (contacts) {\n      const filterFind = contacts.find(\n        element => element.name.toLowerCase() === name.toLowerCase()\n      );\n\n      if (filterFind) {\n        window.alert(`Name: ${name} is already in contacts`);\n        return 0;\n      }\n    }\n    createContact(contactData);\n  };\n\n  const reset = () => {\n    setname('');\n    setnumber('');\n  };\n\n  return (\n    <form action=\"\" className=\"MainForm\" onSubmit={handleSubmit}>\n      <ContactAnyInput\n        LableText=\"name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+((['-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        handleChange={event => handleChange(event, setname)}\n      />\n      <ContactAnyInput\n        LableText=\"number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        handleChange={event => handleChange(event, setnumber)}\n      />\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","import { useDeleteContactMutation } from 'redux/contact';\n\nconst ContactItem = ({ id, name, phone }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  return (\n    <li key={id}>\n      <span className=\"name\">{name}</span>\n      <span className=\"number\">{phone}</span>\n      <button\n        onClick={() => {\n          deleteContact(id);\n        }}\n      >\n        {isDeleting ? 'Deleting...' : 'Delete'}\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport './ContactList.css';\nimport { useSelector } from 'react-redux';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nimport { getfilterValue } from 'redux/filterSlice';\nimport { useFetchContactsQuery } from 'redux/contact';\nimport { getVisibleContacts } from 'redux/contact-selector';\n\nconst ContactList = () => {\n  const { data, isFetching, error } = useFetchContactsQuery();\n\n  const filter = useSelector(getfilterValue);\n  const visibleContacts = getVisibleContacts({ filter, data });\n  return (\n    <>\n      {isFetching ? 'Loading...' : 'Contacts table'}\n      <ul className=\"ListOfNames\">\n        {error}\n\n        {data && (\n          <>\n            {visibleContacts.length === 0 && 'Nothing found'}\n            {visibleContacts.map(contacts => {\n              return <ContactItem key={contacts.id} {...contacts} />;\n            })}\n          </>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  deleteFunc: PropTypes.func,\n};\n","export const getVisibleContacts = ({ data, filter }) => {\n  const normalizedFilter = filter.toLowerCase();\n  if (data) {\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n};\n","import PropTypes from 'prop-types';\nimport './Section.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1 className=\"title\">{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import './Filter.css';\nimport ContactAnyInput from '../ContactAnyInput';\nimport { filtering } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleChangeFilter = event => {\n    dispatch(filtering(event.target.value));\n  };\n  return (\n    <ContactAnyInput\n      LableText=\"Find contacts by name\"\n      type=\"text\"\n      name=\"filter\"\n      handleChange={handleChangeFilter}\n    />\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Section from 'components/Section';\nimport Filter from 'components/Filter';\nexport const Contacts = () => {\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["type","name","pattern","title","handleChange","LableText","htmlFor","className","required","onChange","ContactForm","contacts","useFetchContactsQuery","data","useAddContactMutation","createContact","useState","setname","number","setnumber","event","SetFunction","target","value","onSubmit","contactData","find","element","toLowerCase","window","alert","reset","action","preventDefault","phone","ContactAnyInput","id","useDeleteContactMutation","deleteContact","isDeleting","isLoading","onClick","isFetching","error","visibleContacts","normalizedFilter","filter","contact","includes","getVisibleContacts","useSelector","getfilterValue","length","map","children","dispatch","useDispatch","filtering","Contacts"],"sourceRoot":""}